---
- hosts: 'all'
  vars:
    bin: '{{ ansible_env.PWD }}/apps/bin'
    install: '{{ ansible_env.PWD }}/install'
    cellar: '/home/linuxbrew/.linuxbrew/Cellar'
    config: '{{ ansible_env.PWD }}/config'
  tasks:
  - name: 'apt: update'
    apt:
      update_cache: true
    become: true

  - name: 'apt: install'
    apt:
      name:
      - 'ssh-askpass'
      state: 'latest'
    become: true

  - name: 'docker: dependencies'
    apt:
      name:
      - 'apt-transport-https'
      - 'ca-certificates'
      - 'curl'
      - 'software-properties-common'
      state: 'latest'
    become: true
  - name: 'docker: key'
    apt_key:
      url: 'https://download.docker.com/linux/ubuntu/gpg'
      id: '9DC858229FC7DD38854AE2D88D81803C0EBFCD88'
    become: true
  - name: 'docker: repository'
    apt_repository:
      repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu disco stable'
      update_cache: true
    become: true
  - name: 'docker'
    apt:
      name: 'docker-ce'
      state: 'latest'
    become: true
  - name: 'docker: docker-compose'
    shell: '{{ install }}/docker-compose.bash'
    register: 'docker_compose_shell'
    changed_when: '"already installed" not in docker_compose_shell.stdout'
  - name: 'docker: permission'
    user:
      name: '{{ ansible_user_id }}'
      groups: ['docker']
      append: true
    become: true

  - name: 'brew: install'
    homebrew:
      name:
      - 'gcc'
      - 'jq'
      - 'ansible'
      - 'neovim'
      - 'shellcheck'
      - 'tmux'
      - 'ripgrep'
      - 'go'
      - 'rustup-init'
      - 'lua'
      - 'luarocks'
      - 'direnv'
      - 'hub'
      state: 'latest'

  - name: '1password-cli'
    shell: '{{ install }}/1password-cli.bash'
    register: 'op_shell'
    changed_when: '"already installed" not in op_shell.stdout'

  - name: 'goland'
    shell: '{{ install }}/goland.bash'
    register: 'goland_shell'
    changed_when: '"already installed" not in goland_shell.stdout'

  - name: 'golangci-lint'
    shell: '{{ install }}/golangci-lint.bash'
    register: 'golangci_lint_shell'
    changed_when: '"already installed" not in golangci_lint_shell.stdout'

  - name: 'env: bash'
    lineinfile:
      path: '~/.bashrc'
      line: '{{ item }}'
    with_items:
    - 'export PATH="{{ bin }}:${PATH}"'
    - 'export PATH="/home/linuxbrew/.linuxbrew/bin:${PATH}"'
    - 'export EDITOR="nvim"'
    - 'export GOROOT="{{ cellar }}/go/$( go version | rg -o "1\.\d+(\.\d+)?" )/libexec"'
    - 'export GOPATH="${HOME}/go"'
    - 'export PATH="${GOPATH}/bin:${PATH}"'
    - 'eval "$( direnv hook bash )"'
    
  - name: 'git: config'
    ini_file:
      path: '~/.gitconfig'
      create: true
      section: 'include'
      option: 'path'
      value: '{{ config }}/.gitconfig'
